<project name="Compiler" default="all" basedir="../">
	<description>
		simple example build file
	</description>

	<!-- set global properties for this build -->
	<property name="src" location="src" />
	<property name="tests" location="tests" />
	<property name="bin" location="bin" />
	<property name="target" location="target" />
	<property name="srcLibFirm" location="lib/firm" />
	<property name="srcResources" location="resources" />

	<property name="jarLocation" location="${target}/${ant.project.name}.jar" />
	<property name="targetLibFirm" location="${target}/lib/firm" />
	<property name="targetZip" location="${target}/compiler.zip" />
	<property name="targetTar" location="${target}/compiler.tar.bz2" />
	<property name="targetResources" location="${target}/resources" />

	<property name="commons-cli" location="lib/commons-cli-1.2.jar" />
	<property name="jfirm" location="lib/jfirm.jar" />
	<property name="jna" location="lib/jna.jar" />

	<path id="classpath.base">
		<pathelement location="${commons-cli}" />
		<pathelement location="${jfirm}" />
		<pathelement location="${jna}" />
	</path>


	<path id="classpath.test">
		<pathelement location="lib/junit-4.11.jar" />
		<pathelement location="lib/hamcrest-core-1.3.jar" />
		<pathelement location="lib/commons-math3-3.3.jar" />
		<pathelement location="${bin}" />
		<path refid="classpath.base" />
	</path>



	<target name="clean-build" depends="clean"
		description="clean and compile the source">
		<!-- Compile the java code from ${src} into ${bin} -->
		<mkdir dir="${bin}" />
		<javac srcdir="${src}" destdir="${bin}" includeantruntime="false">
			<classpath refid="classpath.base" />
		</javac>
		<echo message="Build done" />
	</target>


	<target name="clean" description="clean up">
		<delete dir="${bin}" />
		<delete file="${jarLocation}" />
		<delete file="${targetZip}" />
		<delete file="${targetTar}" />
		<delete dir="${targetLibFirm}" />
		<delete dir="${targetResources}" />
	</target>


	<target name="buildJar" depends="clean-build">
		<mkdir dir="${target}" />
		<jar destfile="${jarLocation}" filesetmanifest="mergewithoutmain">
			<manifest>
				<attribute name="Main-Class" value="compiler.main.CompilerApp" />
				<attribute name="Class-Path" value="." />
			</manifest>
			<fileset dir="${bin}" />
			<zipfileset excludes="META-INF/*.SF" src="${commons-cli}" />
			<zipfileset excludes="META-INF/*.SF" src="${jfirm}" />
			<zipfileset excludes="META-INF/*.SF" src="${jna}" />
		</jar>
	</target>


	<!-- Builds the jar file and tries to execute it as a simple test -->
	<target name="testJar" depends="buildJar,copyResources">
		<exec executable="java" resultproperty="returnCode" failonerror="true">
		<arg value="-jar" />
			<arg value="${jarLocation}" />
			<arg value="--compile-firm" />
			<arg value="./testdata/math/IterativeFibonacci.java" />
		</exec>
	</target>

	<target name="copyResources" depends="buildJar">
		<copy todir="${targetLibFirm}">
			<fileset dir="${srcLibFirm}" />
		</copy>
		<copy todir="${targetResources}">
			<fileset dir="${srcResources}" />
		</copy>
		<echo message="Resources copied." />
	</target>

	<!-- Build compiler.zip package -->
	<target name="buildZip" depends="testJar,copyResources">
		<delete file="${targetZip}" />
		<delete file="${targetTar}" />

		<zip destfile="${targetZip}" basedir="${target}" />
		<tar destfile="${targetTar}" longfile="gnu" compression="bzip2">
			<tarfileset dir="${target}" filemode="777">
				<include name="compiler"/>
			</tarfileset>
			<tarfileset dir="${target}">
				<include name="**" />
				<exclude name="compiler"/>
				<exclude name="*.zip"/>
			</tarfileset>
		</tar>
	</target>

	<target name="build" depends="testJar,copyResources">
		<echo message="Build done." />
	</target>


	<target name="all"
		description="clean and build everything, run tests and build jar file">
		<antcall target="runUnitTests" />
		<antcall target="runIntegrationTests-compile" />
		<antcall target="buildZip" />
	</target>



	<target name="buildTests" description="compile test sources"
		depends="clean-build">
		<javac srcdir="${tests}" destdir="${bin}" includeantruntime="false">
			<classpath refid="classpath.test" />
		</javac>
		<echo message="Build of tests done" />
	</target>


	<target name="runUnitTests" depends="buildTests">
		<junit printsummary="on" fork="true" dir="${basedir}"
			haltonfailure="yes" maxmemory="1g">
			<classpath>
				<path refid="classpath.test" />
			</classpath>

			<formatter type="brief" usefile="false" />

			<batchtest>
				<fileset dir="${tests}" includes="**/*Test.java" />
			</batchtest>
		</junit>
	</target>
	
	<target name="runIntegrationTests-compile" depends="buildTests">
		<junit printsummary="on" fork="true" dir="${basedir}"
			haltonfailure="yes" maxmemory="1g">
			<classpath>
				<path refid="classpath.test" />
			</classpath>

			<formatter type="brief" usefile="false" />

			<batchtest>
				<fileset dir="${tests}" includes="compiler/firm/*IT.java" />
			</batchtest>
		</junit>
	</target>
</project>
